# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'aes_main.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import sys

from PyQt5.QtCore import QByteArray
import aes128
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(671, 493)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(290, 20, 111, 41))
        self.label.setObjectName("label")

        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setGeometry(QtCore.QRect(40, 250, 256, 192))
        self.textBrowser.setObjectName("textBrowser")

        self.textBrowser_2 = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser_2.setGeometry(QtCore.QRect(370, 250, 256, 192))
        self.textBrowser_2.setObjectName("textBrowser_2")

        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(150, 110, 381, 22))
        self.lineEdit.setObjectName("lineEdit")

        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(260, 70, 161, 31))
        self.label_2.setObjectName("label_2")

        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(300, 150, 93, 28))
        self.pushButton.setObjectName("pushButton")
        # проверка события кнопки
        self.pushButton.clicked.connect(self.write_key)

        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(120, 210, 93, 28))
        self.pushButton_2.setObjectName("pushButton_2")
        # проверка события кнопки
        self.pushButton_2.clicked.connect(self.encrypt)

        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(452, 210, 101, 28))
        self.pushButton_3.setObjectName("pushButton_3")
        # проверка события кнопки
        self.pushButton_3.clicked.connect(self.decrypt)

        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow",
                                      "<html><head/><body><p><span style=\" font-size:14pt; font-weight:600;\">AES-128</span></p></body></html>"))
        self.label_2.setText(_translate("MainWindow",
                                        "<html><head/><body><p><span style=\" font-size:12pt; font-style:italic;\">секретный ключ</span></p></body></html>"))
        self.pushButton.setText(_translate("MainWindow", "Ввод"))
        self.pushButton_2.setText(_translate("MainWindow", "Зашифровать"))
        self.pushButton_3.setText(_translate("MainWindow", "Расшифровать"))

    def encrypt(self):
        with open("hello.txt", 'rb') as f:
            self.data = f.read()
            crypted_data = []
            temp = []
            for byte in self.data:
                temp.append(byte)
                if len(temp) == 16:
                    crypted_part = aes128.encrypt(temp, self.key)
                    crypted_data.extend(crypted_part)
                    del temp[:]
            else:

                if 0 < len(temp) < 16:
                    empty_spaces = 16 - len(temp)
                    for i in range(empty_spaces - 1):
                        temp.append(0)
                    temp.append(1)
                    self.crypted_part = aes128.encrypt(temp, self.key)
                    crypted_data.extend(self.crypted_part)

                    message = bytes(crypted_data)
                    ms = str(message)[2:][:-1]
                    print(ms)

                    print(bytes(message))

            self.textBrowser.setText(str(ms))

    def decrypt(self):

        decrypted_data = []
        temp = []
        for byte in self.data:
            temp.append(byte)
            if len(temp) == 16:
                decrypted_part = aes128.decrypt(temp, self.key)
                decrypted_data.extend(decrypted_part)
                del temp[:]
        else:

            if 0 < len(temp) < 16:
                empty_spaces = 16 - len(temp)
                for i in range(empty_spaces - 1):
                    temp.append(0)
                temp.append(1)

                decrypted_part = aes128.encrypt(temp, self.key)
                message = aes128.decrypt(decrypted_part, self.key)

                msg = bytes(message)
                ms = str(msg)[2:]
                print(ms)

                sep = '\\'
                rest = ms.split(sep, 1)[0]

                self.textBrowser_2.setText(str(rest))

    def write_key(self):

        self.key = self.lineEdit.text()

        if len(self.key) > 16:
            sys.exit(app.exec_())
        for symbol in self.key:
            if ord(symbol) > 0xff:
                print('That key won\'t work. Try another using only latin alphabet and numbers')
                continue
            break

        print(self.key)


if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
